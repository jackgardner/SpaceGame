//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;

public class BasicWorldStream : IWorldStreamSource
{
	public BasicWorldStream ()
	{
	}

	public IEnumerable<ChunkObject> GetObjects(Bounds bounds)
	{
		int numberOfObjects = UnityEngine.Random.Range(0, 100);
		
		List<ChunkObject> retEnum = new List<ChunkObject>(numberOfObjects);
		
		for (int i = 0; i < numberOfObjects; i++)
		{
			// Get the position of the new object
			float xLocation = UnityEngine.Random.Range(bounds.min.x, bounds.max.x);
			float yLocation = UnityEngine.Random.Range(bounds.min.y, bounds.max.y);
			float zLocation = UnityEngine.Random.Range(bounds.min.z, bounds.max.z);
			
			ChunkObject newCO = new ChunkObject(new Vector3(xLocation, yLocation,zLocation), Vector3.one, Quaternion.identity, "Asteroid");
			//GameObject chunkIdentifier = new GameObject(string.Format("{0} {1} {2}", xLocation, yLocation, zLocation));

			// Check if the new co overlaps with any exisiting ones
			/*for (int j = 0; j < numberOfObjects; j++) {
				if (!newCO.bounds.Intersects(retEnum[j].bounds)){
					retEnum[i] = newCO;
				}
			}*/
		}

		return retEnum;
	}
}


